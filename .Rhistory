setwd("/Users/imad/Desktop/Git/stan-workshop")
list.files()
x <- c(4,6,7)
x
M <- matrix(c(6,7,8, 1,2,7), nrow = 2)
M
3*x
x%*%t(M)
M
x
t(x)
3*x # this is scalar multiplication
v <- (3,47)
v <- c(3,4,7)
my_list <- list()
my_list$x <- c(3,4,6)
my_list$item2 <- seq(1,10,0.5)
my_list$item2
x
x[2]
M
M[2,2]
M[,2]
M[1:2,2]
M
M[1,]
M[1:2,1:2]
D <- diag(1, nrow=10)
D
D2 <- diag(70, nrow=10)
D2
?diag
f <- function(x) {
output <- x^2
return(output)
}
f <- function(x) {
output <- x^2
return(output)
}
f(2)
function(x_input, y_input) {
return(x_input^2 + y_input^2)
}
f_xy <- function(x_input, y_input) {
return(x_input^2 + y_input^2)
}
f_xy(2)
f_xy(2, 2)
f_xy(2,2)
remove(v, x)
remove(list=ls())
list.files()
booleantext <- read.csv("booleantext.csv")
View(booleantext)
cbind_stuff$M <- diag(1,3)
cbind_stuff <- list()
cbind_stuff$M <- diag(1,3)
cbind_stuff$v <- c(rep(3,3))
cbind_stuff$v
cbind_stuff$M_and_v <- cbind(cbind_stuff$M, cbind_stuff$v)
cbind_stuff$M_and_v
cbind_stuff$r <- c(rep(2,4))
cbind_stuff$Mvr <- rbind(cbind_stuff$M_and_v, cbind_stuff$r)
cbind_stuff$Mvr
seq(1,10, 0.5)
seq(1,10, 0.005)
cbind_stuff$Mvr
View(booleantext)
View(booleantext)
matrixdata <- data.frame(cbind_stuff$Mvr)
View(matrixdata)
names(matrixdata) <- c("var1","var2","var3","var4")
View(booleantext)
View(booleantext)
View(matrixdata)
names(matrixdata)
for(t in 1:10) {
print("iteration")
}
for(t in 1:10) {
print(paste("iteration:",t))
}
for(t in 1:10) {
print(paste0("iteration:",t))
}
i <- 0
while(i < 5) {
print(paste(i,"is less than 5"))
}
i <- 0
while(i < 5) {
print(paste(i,"is less than 5"))
i <- i + 1
}
i <- 0
while(i =< 5) {
print(paste(i,"is less than 5"))
i <- i + 1
}
i <- 0
while(i <= 5) {
print(paste(i,"is less than 5"))
i <- i + 1
}
i <- 0
while(i <= 5) {
print(paste(i,"is less than 5"))
i <- i + 1
}
i <- 0
i <- 0
while(i <= 5) {
print(paste(i,"is less than 5"))
#i <- i + 1
}
i <- 0
while(i <= 5) {
print(paste(i,"is less than 5"))
i <- i + 1
}
i <- 4
while(i <= 5) {
print(paste(i,"is less than 5"))
i <- i + 1
}
condition <- 0.7
if (condition >= 0.5) {
print(1)
} else {
print(0)
}
condition <- 0.2
if (condition >= 0.5) {
print(1)
} else {
print(0)
}
View(booleantext)
5==5
5==3
5=3
5<-3
5!=3
ifelse(booleantext[,2]=="TRUE",1, 0)
binarydata <- ifelse(booleantext[,2]=="TRUE",1, 0)
booleantext$binary <- binarydata
View(booleantext)
booleantext <- booleantext[,-1]
View(booleantext)
View(booleantext)
booleantext$binary
write.csv(booleantext,"binarydata.csv")
list.files()
?rnorm
runif(1)
runif(1)
runif(100)
dunif(0.112157078)
dunif(12)
dunif(12,0,20)
?dunif
dunif(12,0,13)
rnorm(100)
rbinom(6, 6, 0.5)
rbinom(1, 6, 0.5)
rbinom(1, 6, 0.5)
rcauchy(10)
rbeta(10)
rbeta(10, 2, 2)
rbeta(10, 2, 4)
f <- function(x) {
return(-(x-5)^2)
}
plot(seq(-10,10,0.05), f(seq(-10,10,0.05)))
plot(seq(-10,10,0.05), f(seq(-10,10,0.05)), type = "l")
plot(seq(-10,10,0.05), f(seq(-10,10,0.05)), type = "l", lwd = 3)
plot(seq(-10,10,0.05), f(seq(-10,10,0.05)), type = "l", lwd = 3, main = "Some Function")
plot(seq(-10,10,0.05), f(seq(-10,10,0.05)), type = "l", lwd = 3, main = "Some Function", xlab = "x", ylab = "f(x)")
abline(v = 5, col = "red", lty = 2)
points(5, f(5), col = "blue", pch = 20)
plot(seq(-10,10,0.05), f(seq(-10,10,0.05)), type = "l", lwd = 3, main = "Some Function", xlab = "x", ylab = "f(x)")
abline(v = 5, col = "red", lty = 2)
points(5, f(5), col = "blue", pch = 20, cex = 2)
?abline
beta_rand <- rbeta(1000,2,2)
hist(beta_rand)
hist(beta_rand)
hist(beta_rand, col = "grey", main = "Histogram Beta(2,2)", xlab = "x")
abline(v = mean(beta_rand))
abline(v = mean(beta_rand), col = "red", lwd = 3)
remove(list = ls())
library(rstan)
list.files()
list.files()
eightschools <- data.frame(
cbind(
c("A","B","C","D","E","F","G","H"),
c(28,8,-3,7,-1,1,18,12),
c(15,10,16,11,9,11,10,18)
)
)
names(eightschools) <- c("school","te","se")
View(eightschools)
eightschools_dataforstan <- list()
View(eightschools)
eightschools_dataforstan$y <- eightschools[,2]
eightschools_dataforstan$y <- eightschools[,2]
eightschools_dataforstan$sigma <- eightschools[,3]
typeof(eightschools_dataforstan$y)
eightschools_dataforstan$J <- length(eightschools[,2])
eightschools_dataforstan$J
library(rstan)
stanc("eightschools_notpooled.stan")
stanc("eightschools_notpooled.stan")
stanc("eightschools_notpooled.stan")
stanc("eightschools_notpooled.stan")
stanc("eightschools_notpooled.stan")
stanc("eightschools_notpooled.stan")
stanc("eightschools_notpooled.stan")
stanc("eightschools_notpooled.stan")
eightschools_fit1 <- stan(file = "eightschools_notpooled.stan", data = eightschools_dataforstan, chains = 4, iter = 100)
eightschools_dataforstan$y
eightschools_dataforstan$y <- as.integer(eightschools[,2]) # y value for te
eightschools_dataforstan$y
eightschools_dataforstan$sigma
eightschools_dataforstan$y <- as.integer(eightschools[,2]) # y value for te
eightschools_dataforstan$sigma <- as.integer(eightschools[,3]) # sigma for se
eightschools_dataforstan$J <- length(eightschools[,2]) # length of vector
eightschools_fit1 <- stan(file = "eightschools_notpooled.stan", data = eightschools_dataforstan, chains = 4, iter = 100)
traceplot(eightschools_fit1)
traceplot(eightschools_fit1)
print(eightschools_fit1)
eightschools_fit1 <- stan(file = "eightschools_notpooled.stan", data = eightschools_dataforstan, chains = 4, iter = 1000)
print(eightschools_fit1)
eightschools_fit1 <- stan(file = "eightschools_notpooled.stan", data = eightschools_dataforstan, chains = 4, iter = 1000)
print(eightschools_fit1)
eightschools_fit1_extract <- extract(eightschools_fit1)
names(eightschools_fit1_extract)
eightschools_fit1_theta <- list()
dim(eightschools_fit1_extract$theta)
png("eightschools_fit1_theta.png", width = 1000, height = 800)
dev.off()
dev.off()
png("eightschools_fit1_theta.png", width = 1000, height = 800)
par(mfrow=c(4,2))
for (i in 1:8) {
hist(eightschools_fit1_extract$theta[,i], col = "grey", main = paste("Theta",i), xlab = "Theta")
}
dev.off()
png("eightschools_fit1_theta.png", width = 1000, height = 800)
par(mfrow=c(4,2))
for (i in 1:8) {
hist(eightschools_fit1_extract$theta[,i], col = "grey", main = paste("Theta",i), xlab = "Theta")
abline(v=mean(eightschools_fit1_extract$theta[,i]), col = "red", lwd = 3)
}
dev.off()
png("eightschools_fit1_theta.png", width = 1000, height = 800, pointsize = 25)
par(mfrow=c(4,2))
for (i in 1:8) {
hist(eightschools_fit1_extract$theta[,i], col = "grey", main = paste("Theta",i), xlab = "Theta")
abline(v=mean(eightschools_fit1_extract$theta[,i]), col = "red", lwd = 3)
}
dev.off()
png("eightschools_fit1_theta.png", width = 1000, height = 800, pointsize = 25)
par(mfrow=c(2,4))
for (i in 1:8) {
hist(eightschools_fit1_extract$theta[,i], col = "grey", main = paste("Theta",i), xlab = "Theta")
abline(v=mean(eightschools_fit1_extract$theta[,i]), col = "red", lwd = 3)
}
dev.off()
png("eightschools_fit1_theta.png", width = 1500, height = 800, pointsize = 25)
par(mfrow=c(2,4))
for (i in 1:8) {
hist(eightschools_fit1_extract$theta[,i], col = "grey", main = paste("Theta",i), xlab = "Theta")
abline(v=mean(eightschools_fit1_extract$theta[,i]), col = "red", lwd = 3)
}
dev.off()
stanc("eightschools_notpooled.stan")
stanc("eightschools_notpooled.stan")
eightschools_fit1 <- stan(file = "eightschools_notpooled.stan", data = eightschools_dataforstan, chains = 4, iter = 1000)
traceplot(eightschools_fit1)
print(eightschools_fit1)
stanc("eightschools_notpooled.stan")
stanc("eightschools_notpooled.stan")
eightschools_fit1 <- stan(file = "eightschools_notpooled.stan", data = eightschools_dataforstan, chains = 4, iter = 1000)
traceplot(eightschools_fit1)
print(eightschools_fit1)
stanc("eightschools_notpooled.stan")
eightschools_fit1 <- stan(file = "eightschools_notpooled.stan", data = eightschools_dataforstan, chains = 4, iter = 1000)
traceplot(eightschools_fit1)
eightschools_fit1 <- stan(file = "eightschools_notpooled.stan", data = eightschools_dataforstan, chains = 4, iter = 100)
traceplot(eightschools_fit1)
eightschools_fit1 <- stan(file = "eightschools_notpooled.stan", data = eightschools_dataforstan, chains = 4, iter = 50)
traceplot(eightschools_fit1)
png("eightschools_fit1_theta.png", width = 1500, height = 800, pointsize = 25)
par(mfrow=c(2,4))
for (i in 1:8) {
hist(eightschools_fit1_extract$theta[,i], col = "grey", main = paste("Theta",i), xlab = "Theta")
abline(v=mean(eightschools_fit1_extract$theta[,i]), col = "red", lwd = 3)
}
dev.off()
dev.off()
png("eightschools_fit1_theta.png", width = 1500, height = 800, pointsize = 25)
par(mfrow=c(2,4))
for (i in 1:8) {
hist(eightschools_fit1_extract$theta[,i], col = "grey", main = paste("Theta",i), xlab = "Theta")
abline(v=mean(eightschools_fit1_extract$theta[,i]), col = "red", lwd = 3)
}
dev.off()
